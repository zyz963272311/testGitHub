package xyz.zyzhu.spring.boot.redis;

import java.lang.reflect.Method;
import org.springframework.cache.CacheManager;
import org.springframework.cache.annotation.CachingConfigurerSupport;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.cache.interceptor.KeyGenerator;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.cache.RedisCacheManager;
import org.springframework.data.redis.connection.RedisConnectionFactory;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.PropertyAccessor;
import com.fasterxml.jackson.databind.ObjectMapper;
/**
 * <p>标题： TODO</p>
 * <p>功能： </p>
 * <p>所属模块： TODO</p>
 * <p>版权： Copyright © 2017 SNSOFT</p>
 * <p>公司: 赵玉柱练习</p>
 * <p>创建日期：2017年11月23日 下午8:02:21</p>
 * <p>类全名：xyz.zyzhu.spring.boot.redis.RedisConfig</p>
 * 作者：赵玉柱
 * 初审：
 * 复审：
 * 监听使用界面:
 * @version 8.0
 */
@Configuration
@EnableCaching
public class RedisConfig extends CachingConfigurerSupport
{
	@Bean
	@Override
	public KeyGenerator keyGenerator()
	{
		return new KeyGenerator()
		{
			@Override
			public Object generate(Object target, Method method, Object... params)
			{
				StringBuffer sb = new StringBuffer();
				sb.append(target.getClass().getName()).append(method.getName());
				for (Object param : params)
				{
					sb.append(param.toString());
				}
				return sb.toString();
			}
		};
	}

	public CacheManager cacheManager(RedisTemplate template)
	{
		RedisCacheManager cacheManager = new RedisCacheManager(template);
		return cacheManager;
	}
	public RedisTemplate<Object,Object> redisTemplete(RedisConnectionFactory factory)
	{
		StringRedisTemplate template = new StringRedisTemplate(factory);
		Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);
		ObjectMapper mapper = new ObjectMapper();
		mapper.setVisibility(PropertyAccessor.ALL,JsonAutoDetect.Visibility.ANY);
		mapper.setDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
		jackson2JsonRedisSerializer.setObjectMapper(mapper);
		
	}
}
