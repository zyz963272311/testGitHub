/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2017-05-23 15:26:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://"
			+ request.getServerName() + ":" + request.getServerPort()
			+ path + "/";

      out.write("\r\n");
      out.write("<title>ajax实现二级联动</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar xmlhttp;\r\n");
      out.write("\tfunction change(value) {\r\n");
      out.write("\t\tif (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari\r\n");
      out.write("\t\t\txmlhttp = new XMLHttpRequest();\r\n");
      out.write("\t\t} else {// code for IE6, IE5\r\n");
      out.write("\t\t\txmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\txmlhttp.open(\"POST\", \"");
      out.print(basePath);
      out.write("Sheng\", true);\r\n");
      out.write("\t\txmlhttp.setRequestHeader(\"Content-type\",\r\n");
      out.write("\t\t\t\t\"application/x-www-form-urlencoded\");\r\n");
      out.write("\t\txmlhttp.onreadystatechange = back_change;\r\n");
      out.write("\t\txmlhttp.send(\"sheng=\" + value);\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction back_change() {\r\n");
      out.write("\t\t//城市下拉选择框的对象\r\n");
      out.write("\t\tvar cityobj = document.getElementById(\"shi\");\r\n");
      out.write("\t\t//当请求状态等于4时，相应已完成，可以访问服务器响应并使用它\r\n");
      out.write("\t\tif (xmlhttp.readyState == 4) {\r\n");
      out.write("\t\t\t//当状态为200时意味着，状态正常，未出错\r\n");
      out.write("\t\t\tif (xmlhttp.status == 200) {\r\n");
      out.write("\t\t\t\t//获取相应的xml文档\r\n");
      out.write("\t\t\t\tvar cityxml = xmlhttp.responseXML;\r\n");
      out.write("\t\t\t\t//获取根元素\r\n");
      out.write("\t\t\t\tvar root = cityxml.documentElement;\r\n");
      out.write("\t\t\t\t//获取根元素（city_info）下面的所有city元素\r\n");
      out.write("\t\t\t\tvar cities = root.getElementsByTagName(\"city\");\r\n");
      out.write("\t\t\t\t//将下拉框内容清除\r\n");
      out.write("\t\t\t\tcityobj.options.length = 1;\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < cities.length; i++) {\r\n");
      out.write("\t\t\t\t\tvar city = cities[i];\r\n");
      out.write("\t\t\t\t\t//获取节点的值\r\n");
      out.write("\t\t\t\t\tvar cid = city.childNodes[0].firstChild.nodeValue;\r\n");
      out.write("\t\t\t\t\tvar cname = city.childNodes[2].firstChild.nodeValue;\r\n");
      out.write("\t\t\t\t\t//alert(cid+\" \"+cname);\r\n");
      out.write("\t\t\t\t\t//放到下拉选择框里Option(文本内容,value值);\r\n");
      out.write("\t\t\t\t\tcityobj.options[cityobj.options.length] = new Option(cname,\r\n");
      out.write("\t\t\t\t\t\t\tcid);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//当状态为404时，表示找不到页面\r\n");
      out.write("\t\t\telse if (xhr.status == 404) {\r\n");
      out.write("\t\t\t\talert(\"Request URL is not exists!\");\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\talert(\"Error:Status is:\" + request.status);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction changeShi(value)\r\n");
      out.write("\t{\r\n");
      out.write("\t\talert(value);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t省：\r\n");
      out.write("\t<select id=\"sheng\" onchange=\"change(this.value)\">\r\n");
      out.write("\t\t<option id=\"001\" value=\"beijing\">北京</option>\r\n");
      out.write("\t\t<option id=\"002\" value=\"shanghai\">上海</option>\r\n");
      out.write("\t\t<option id=\"003\" value=\"guangdong\">广东</option>\r\n");
      out.write("\t</select> &nbsp;&nbsp;&nbsp;&nbsp; 市：\r\n");
      out.write("\t<select id=\"shi\" onchange=\"changeShi(this.value)\">\r\n");
      out.write("\t\t<option id=\"000\" value=\"qingxuanze\">---请选择---</option>\r\n");
      out.write("\t</select>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
