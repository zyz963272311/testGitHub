/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2017-06-21 15:10:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.echart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bar_002djson_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");

	String path = request.getContextPath();
	String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(path );
      out.write("/resources/js/echarts.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("var json='{\"data\":{\"title\":\"EChart-Json\",\"legend\":[\"legend1\"],\"xAxis\":[\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\"],\"series\":[{\"name\":\"legend1\",\"type\":\"bar\",\"data\":[12,34,56,78,90]}]}}';\r\n");
      out.write("var json1='{\"data\":{\"title\":\"EChart-Json\",\"legend\":[\"legend1\",\"legend2\"],\"xAxis\":[\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\"],\"series\":[{\"name\":\"legend1\",\"type\":\"bar\",\"data\":[12,34,56,78,90]},{\"name\":\"legend2\",\"type\":\"bar\",\"data\":[21,43,65,87,99]}]}}';\r\n");
      out.write("\tfunction ld(ttl,leg,xa,ser,id)\r\n");
      out.write("\t{\r\n");
      out.write("\t\t//数据\r\n");
      out.write("        // 基于准备好的dom，初始化echarts实例\r\n");
      out.write("        var myChart = echarts.init(document.getElementById(id));\r\n");
      out.write("\r\n");
      out.write("        // 指定图表的配置项和数据\r\n");
      out.write("        var option = {\r\n");
      out.write("            title: {\r\n");
      out.write("                text: ttl\r\n");
      out.write("            },\r\n");
      out.write("            tooltip: {},\r\n");
      out.write("            legend: {\r\n");
      out.write("                data:leg\r\n");
      out.write("            },\r\n");
      out.write("            xAxis: {\r\n");
      out.write("                data: xa\r\n");
      out.write("            },\r\n");
      out.write("            yAxis: {},\r\n");
      out.write("            series: ser\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        // 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("        myChart.setOption(option,true);\r\n");
      out.write("\t};\r\n");
      out.write("\t//这个是在按钮点击时触发的方法\r\n");
      out.write("\tfunction clk(id,j)\r\n");
      out.write("\t{\r\n");
      out.write("\t\t//数据\r\n");
      out.write("\t\tvar js;\r\n");
      out.write("\t\tif(j == 0)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tjs = json;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if(j==1)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tjs=json1;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar jsonData = eval(\"(\"+js+\")\");\r\n");
      out.write("\t\ttitle=jsonData.data.title;\r\n");
      out.write("\t\tlegend=jsonData.data.legend;\r\n");
      out.write("\t\txAxis=jsonData.data.xAxis;\r\n");
      out.write("\t\tseries=jsonData.data.series;\r\n");
      out.write("\t\tld(title, legend, xAxis, series, id);\r\n");
      out.write("\t};\r\n");
      out.write("    </script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body >\r\n");
      out.write("<input type=\"button\" onclick=\"clk('main',0)\" value=\"点击根据json柱状图\">\r\n");
      out.write("<input type=\"button\" onclick=\"clk('main',1)\" value=\"点击根据json1生成柱状图\">\r\n");
      out.write("<div id=\"main\" style=\"width: 600px;height:400px;\"></div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
